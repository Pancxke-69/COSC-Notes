OS Book - https://os.cybbh.io/public/os/latest/index.html
Stack Number - "11"
Stack IP Address - 10.50.24.52
USERNAME - JOHU-M-24-503
VTY - http://10.50.22.197:8000
RDP COMMAND - xfreerdp /u:student /v:10.50.24.52 -dynamic-resolution +glyph-cache +clipboard
RDP PASSWD - password

DAY 1
-----------------------------------------------------------
*POWERSHELL*
/> Execution-policy 
  # allows to run scripts based on what the setting is.
/> $PROFILE 
  # this is where persistence can be set
  # supports several profile files and host programs like windows. (Below are the locations of each profile)
  > $PsHome\Profile.ps1 - All Users, All Hosts
  > $PsHome\Microsoft.PowerShell_profile.ps1 - All Users, Current Host
  > $Home\[My]Documents\Profile.ps1 - Current User, All Hosts
  > $Home\[My ]Documents\WindowsPowerShell\Profile.ps1 - Current User, Current Host
/> Start-Transcript
  # this logs commands that have been run
  > Start-Transcript | out-null
    # this pipes command history out to null
/> Invoke-Command
  # starts temporary sessions. It is not a remoting command, and is how everything is done in powershell.
  > -asjob
    # this option can be done if querying a large number of hosts or data to run in the background

CTF
-----------------
01 : windows_powershell : start7917 02 : windows_powershell_profiles : start9943 
COMMAND - SSH-J Student@10.50.21.123 or ssh-j andy.dwyer@10.x.0.3

<<<<<<<REGEX From CTF>>>>>>>>>>
get-content words.txt | where-object {$_ -imatch "az"} | measure-object
  # this counts words that have either an 'a' or a 'z' in the word
get-content words.txt | where-object {$_ -imatch "aa[a-g]"} | measure-object
  # this counts the words that have 2 'a's and any letter between 'a-g' after the 'a's
get-content words.txt | where-object {$_ -imatch "gaab"} | measure-object
  # this counts the words that have 'gaab' in it
do {Expand-Archive -Path C:\Users\CTF\Documents\Omega$a.zip -DestinationPath C:\Users\CTF\Documents; $a-=1} until($a -eq 1)

<<<<<<<<<Profile Stuff>>>>>>>>>>>>>
Test-Path -Path $profile.currentUsercurrentHost
  #if true -> path exitst#>
Test-Path -Path $profile.allusersallhosts
  #if true -> path exists
$Home
  -> Home directory path
$Profile
  -> current user, current host
#get-help about_profiles
#get-content <path of profile>

$PROFILE | Format-List -Force
  #get all profiles on machine
  get-content
  #or
  Notepad 
      to read the profile confs












